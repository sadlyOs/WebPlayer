version: "3.8"

services:
  db_auth:
    image: postgres:16-alpine
    container_name: db_auth
#    volumes:
#      - postgres_data_auth:/var/lib/postgresql/data/
    env_file:
      - ./auth_service/.env-non-dev
    command: -p 5432

  auth_service:
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    container_name: auth_service
    env_file:
      - ./auth_service/.env-non-dev
    ports:
      - 8001:8000
    command:
      sh -c "
      alembic upgrade head &&
      uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
#    volumes:
#      - ./auth_service/:/app/
    depends_on:
      - db_auth
      - redis

  db_music:
    image: postgres:16-alpine
    container_name: db_music
#    volumes:
#      - postgres_data_music:/var/lib/postgresql/data/
    env_file:
      - ./music_service/.env-non-dev
    command:
      - -p 5433

  music_service:
    build:
      context: ./music_service
    container_name: music_service
    env_file:
      - ./music_service/.env-non-dev
    ports:
      - 8002:8000
    command:
      sh -c "
      alembic upgrade head &&
      uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
#    volumes:
#      - ./music_service/:/app/
    depends_on:
      - db_music
      - redis

  celery:
    build:
      context: ./auth_service
    container_name: worker_auth
    command: celery -A app.utils.celeryUtils.worker:celery worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  redis:
    image: redis:latest
    container_name: redis_container
    volumes:
      - ./redisdata:/data
    command: --port 6379
    expose:
      - 6379

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "8080:8080"
    volumes:
      - ./nginx-config.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth_service
      - music_service
